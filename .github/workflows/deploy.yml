name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # استخراج اسم المشروع من الريبو
            REPO_NAME="actions"
            PROJECT_PATH="/var/www/$REPO_NAME"
            
            # التأكد من أن المجلدات الضرورية موجودة
            sudo mkdir -p $PROJECT_PATH/storage/framework/cache
            sudo mkdir -p $PROJECT_PATH/storage/framework/sessions
            sudo mkdir -p $PROJECT_PATH/storage/framework/views
            sudo mkdir -p $PROJECT_PATH/storage/logs
            sudo mkdir -p $PROJECT_PATH/bootstrap/cache
            
            # ضبط الصلاحيات الصحيحة للمجلدات الرئيسية
            sudo chmod -R 775 $PROJECT_PATH/storage
            sudo chmod -R 775 $PROJECT_PATH/bootstrap/cache
            
            # الانتقال إلى المسار الديناميكي للمشروع
            cd $PROJECT_PATH
            
            # تكوين Git على المستوى العام (لتجنب الأخطاء)
            sudo -u www-data git config --global --add safe.directory $PROJECT_PATH || true
            
            # تحديث الكود من GitHub (باستخدام المستخدم www-data مباشرة)
            sudo -u www-data git fetch origin main
            sudo -u www-data git reset --hard origin/main
            
            # تحديث تبعيات composer
            sudo -u www-data composer install --no-interaction --prefer-dist --optimize-autoloader
            
            # تشغيل أوامر Laravel
            sudo -u www-data php artisan optimize:clear
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            
            # إنشاء رابط Storage إذا لم يكن موجوداً
            sudo -u www-data php artisan storage:link || true
            
            # تشغيل الترحيلات
            sudo -u www-data php artisan migrate --force
            
            # إعادة ضبط الصلاحيات للتأكد من أن جميع المجلدات الهامة لها الصلاحيات المناسبة
            sudo chmod -R 775 $PROJECT_PATH/storage
            sudo chmod -R 775 $PROJECT_PATH/bootstrap/cache
            
            # إعادة تحميل nginx و PHP-FPM
            sudo systemctl restart php8.3-fpm
            sudo systemctl reload nginx
            
            echo "✅ التطبيق تم تحديثه بنجاح!"
      
      - name: deploy success
        run: echo "Deploy successful! ✅"