name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # تعريف المتغيرات الأساسية
            REPO_NAME="actions"
            PROJECT_PATH="/var/www/$REPO_NAME"
            
            echo "🔄 بدء عملية النشر..."
            
            # إعادة تعيين ملكية المجلد بالكامل للمستخدم الحالي مؤقتاً
            sudo chown -R $(whoami):$(whoami) $PROJECT_PATH
            
            # إعادة تكوين Git للسماح بالمستودع
            cd $PROJECT_PATH
            git config --global --add safe.directory $PROJECT_PATH
            
            echo "🔄 تحديث الكود من GitHub..."
            # حاول تحديث الكود من GitHub
            if ! git fetch origin main; then
              echo "⚠️ فشل تحديث الكود، محاولة إعادة ضبط المستودع..."
              # إذا فشل، حاول إعادة تهيئة المستودع
              rm -rf .git
              git init
              git remote add origin https://github.com/eng-mohamedemad-dev/actions.git
              git fetch
              git checkout -f main
            else
              # إذا نجح، قم بتحديث الكود
              git reset --hard origin/main
            fi
            
            echo "📦 تثبيت التبعيات..."
            # التأكد من وجود المجلدات الضرورية ولديها الصلاحيات المناسبة
            mkdir -p storage/framework/cache
            mkdir -p storage/framework/sessions
            mkdir -p storage/framework/views
            mkdir -p storage/logs
            mkdir -p bootstrap/cache
            
            # تشغيل Composer بصلاحيات المستخدم الحالي
            composer install --no-interaction --prefer-dist --optimize-autoloader
            
            echo "🚀 تهيئة التطبيق..."
            # تشغيل أوامر Laravel
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # إنشاء رابط Storage إذا لم يكن موجوداً
            php artisan storage:link || true
            
            # تشغيل الترحيلات
            php artisan migrate --force
            
            echo "🔒 ضبط الصلاحيات النهائية..."
            # إعادة ضبط الملكية والصلاحيات بشكل صحيح
            sudo chown -R www-data:www-data $PROJECT_PATH
            sudo chmod -R 755 $PROJECT_PATH
            sudo chmod -R 775 $PROJECT_PATH/storage
            sudo chmod -R 775 $PROJECT_PATH/bootstrap/cache
            
            # إعادة تحميل الخدمات
            sudo systemctl restart php8.3-fpm
            sudo systemctl reload nginx
            
            echo "✅ تم تحديث التطبيق بنجاح!"
      
      - name: deploy success
        run: echo "Deploy successful! ✅"